

#rng:
#    build: rng
#    ports:
#      - "8001:80"

# replace the rng service with multiple copies of it
rng1:
  build: rng

rng2:
  build: rng

rng3:
  build: rng


# add our load balancer 

rng0:
    image: jpetazzo/hamba
    links:
      - rng1
      - rng2
      - rng3
    command: 80 rng1 80 rng2 80 rng3 80
    ports:
      - "8001:80"





hasher:
    build: hasher
    ports:
      - "8002:80"

##webui:
##    build: webui
##    links:
##      - redis
##    ports:
##      - "8000:80"
##    volumes:
##      - "webui/files/:/files/"

## update webui to reference extra hosts, and avoid referencing file system
## because those files are present locally, not on the remote nodes

webui:
  build: webui
  extra_hosts:
    redis: 52.6.82.5
  ports:
    - "8000:80"
  #volumes:
  #  - "webui/files/:/files/"



## remove redis from here because we are running a single (stateful) instance 
## on just a single node

#redis:
#    image: redis



#worker:
#    build: worker
#    links:
#      - rng
#      - hasher
#      - redis

# update worker service to map from rng to rng0
# (code in worker references rng e.g. http://rng/...)


##worker:
##  build: worker
##  links:
##    - rng0:rng
##    - hasher
##    - redis


## update worker to reference the instance of redis running a single node
## (worker with rest of stack will run on multiple nodes)

worker:
  build: worker
  extra_hosts:
    redis: 52.6.82.5
  links:
    - rng
    - hasher



